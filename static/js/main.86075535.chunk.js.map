{"version":3,"sources":["scroller.js","scene.js","parallax.js","Matsurisu.js","serviceWorker.js","index.js"],"names":["Scroller","y","setY","useState","held","setHeld","curClientY","setCurClientY","endHold","className","onPointerDown","clientY","onPointerLeave","onPointerCancel","onPointerUp","onPointerMove","onWheel","deltaY","initialDims","width","height","Reducer","state","type","value","AnimationContext","createContext","ContainerContext","Scene","children","useReducer","dims","dispatch","frame","setFrame","ref","useRef","useEffect","animationTimer","setInterval","clearInterval","useLayoutEffect","current","bounds","getBoundingClientRect","Provider","Parallax","position","offset","stay","factor","containerDims","useContext","setHeight","delta","top","Math","max","min","zIndex","floor","show","style","left","Matsurisu","alt","src","margin","display","transform","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.86075535.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nexport default function Scroller({ y, setY }) {\r\n  const [held, setHeld] = useState(false);\r\n  const [curClientY, setCurClientY] = useState(0);\r\n  const startHold = ({clientY}) => { setHeld(true); setCurClientY(clientY); };\r\n  const endHold = () => setHeld(false);\r\n  const scroll = ({deltaY}) => setY(y - deltaY / 2);\r\n  const drag = ({clientY}) => {\r\n    if (!held) return;\r\n    const deltaY = clientY - curClientY;\r\n    setY(y + deltaY);\r\n    setCurClientY(clientY);\r\n  }\r\n  return (\r\n    <div className=\"scroller\"\r\n      onPointerDown={startHold}\r\n      onPointerLeave={endHold}\r\n      onPointerCancel={endHold}\r\n      onPointerUp={endHold}\r\n      onPointerMove={drag}\r\n      onWheel={scroll}\r\n    ></div>\r\n  );\r\n}\r\n","import React, { useState, useRef, useEffect, useLayoutEffect, createContext, useReducer } from 'react';\r\nimport Scroller from './scroller';\r\n\r\nconst FPS = 10;\r\n\r\nconst initialDims = { width: 500, height: 0, y: 0 };\r\n\r\nfunction Reducer(state, { type, value }) {\r\n  switch (type) {\r\n    case 'SET_HEIGHT':\r\n      return {...state, height: value}\r\n    case 'SET_WIDTH':\r\n      return {...state, width: value}\r\n    case 'SET_Y':\r\n      return {...state, y: value}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const AnimationContext = createContext(0);\r\nexport const ContainerContext = createContext(initialDims);\r\n\r\nexport default function Scene({ children }) {\r\n  const [dims, dispatch] = useReducer(Reducer, initialDims);\r\n  const [frame, setFrame] = useState(0);\r\n  const ref = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const animationTimer = setInterval(() => setFrame(frame + 1), 1000 / FPS);\r\n    return () => clearInterval(animationTimer);\r\n  }, [frame, setFrame]);\r\n\r\n  useLayoutEffect(() => {\r\n    if (!ref.current) return;\r\n    const bounds = ref.current.getBoundingClientRect();\r\n    dispatch({type: 'SET_HEIGHT', value: bounds.height});\r\n    dispatch({type: 'SET_WIDTH', value: bounds.width});\r\n  }, [ref, dispatch]);\r\n\r\n  return (\r\n    <AnimationContext.Provider value={frame}>\r\n      <ContainerContext.Provider value={dims}>\r\n        <Scroller y={dims.y} setY={(y) => dispatch({type: 'SET_Y', value: y})} />\r\n        <div className=\"main\" ref={ref}>\r\n          {children}\r\n        </div>\r\n      </ContainerContext.Provider>\r\n    </AnimationContext.Provider>\r\n  );\r\n}\r\n","import React, { useRef, useLayoutEffect, useState, useContext } from 'react';\r\nimport { ContainerContext } from './scene';\r\n\r\nexport default function Parallax({ position, offset, stay, factor, children }) {\r\n  const ref = useRef(null);\r\n  const containerDims = useContext(ContainerContext);\r\n  const [height, setHeight] = useState(0);\r\n\r\n  position = position || 0;\r\n  offset = offset || 0;\r\n  stay = stay || 200;\r\n  const delta = (containerDims.y + position) * factor;\r\n  const top = Math.max(Math.min(delta + stay * factor, 0), delta) + (containerDims.height / 2) - (height / 2) + offset;\r\n  const zIndex = Math.floor(100 * factor);\r\n  const show = (top > containerDims.height || (top + 2 * height) < 0);\r\n\r\n  useLayoutEffect(() => {\r\n    if (!ref.current) return;\r\n    setHeight(ref.current.getBoundingClientRect().height);\r\n  }, [ref, setHeight, containerDims]);\r\n\r\n  return (\r\n    (show)\r\n    ? null\r\n    : <div ref={ref} style={{position: 'absolute', left: 0, top, width: 500, height: 'fit-content', zIndex}}>\r\n        {children}\r\n      </div>\r\n  );\r\n}\r\n","import React from 'react';\nimport Scene from './scene';\nimport Parallax from './parallax';\n\nfunction Matsurisu() {\n  return (\n    <Scene>\n      <Parallax factor={1.0} position={0}>\n        <p>まつりす</p>\n      </Parallax>\n\n      <Parallax factor={1.5} position={700} offset={-70}>\n        <img alt=\"matsurisu\" src=\"static/matsurisu_temp.png\" />\n      </Parallax>\n      <Parallax factor={1.0} position={700} offset={70}>\n        <p>それは、夏色まつりを愛するもの</p>\n      </Parallax>\n\n      <Parallax factor={0.8} position={1400} offset={-100}>\n        <img alt=\"matsurisu\" src=\"static/matsurisu_temp.png\" />\n      </Parallax>\n      <Parallax factor={1.0} position={1400}>\n        <p>一匹のまつりすなら、</p>\n        <p>配信を見て応援できる</p>\n      </Parallax>\n\n      <Parallax factor={1.1} position={2100} offset={-80}>\n        <img alt=\"matsurisu\" style={{position: 'relative', margin: 0, left: 50}} src=\"static/matsurisu_temp.png\" />\n      </Parallax>\n      <Parallax factor={0.8} position={2100} offset={-80}>\n        <img alt=\"matsurisu\" style={{position: 'relative', margin: 0, left: 200}} src=\"static/matsurisu_temp.png\" />\n      </Parallax>\n      <Parallax factor={1.3} position={2100} offset={-80}>\n        <img alt=\"matsurisu\" style={{position: 'relative', margin: 0, left: 350}} src=\"static/matsurisu_temp.png\" />\n      </Parallax>\n      <Parallax factor={1.0} position={2100} offset={80}>\n        <p>三匹のまつりすなら、</p>\n        <p>バンドを組める</p>\n      </Parallax>\n\n      <Parallax factor={1.1} position={2800} offset={-80}>\n        <img alt=\"matsurisu\" style={{display: 'inline-block', position: 'relative', margin: 0, top: 20, left: 20, transform: 'scale(0.5, 0.5)'}} src=\"static/matsurisu_temp.png\" />\n        <img alt=\"matsurisu\" style={{display: 'inline-block', position: 'relative', margin: 0, top: 40, left: 100, transform: 'scale(0.5, 0.5)'}} src=\"static/matsurisu_temp.png\" />\n        <img alt=\"matsurisu\" style={{display: 'inline-block', position: 'relative', margin: 0, top: 10, left: 30, transform: 'scale(0.5, 0.5)'}} src=\"static/matsurisu_temp.png\" />\n      </Parallax>\n      <Parallax factor={0.8} position={2800} offset={-80}>\n        <img alt=\"matsurisu\" style={{display: 'inline-block', position: 'relative', margin: 0, top: 60, left: 80, transform: 'scale(0.5, 0.5)'}} src=\"static/matsurisu_temp.png\" />\n        <img alt=\"matsurisu\" style={{display: 'inline-block', position: 'relative', margin: 0, top: 30, left: 20, transform: 'scale(0.5, 0.5)'}} src=\"static/matsurisu_temp.png\" />\n        <img alt=\"matsurisu\" style={{display: 'inline-block', position: 'relative', margin: 0, top: 40, left: 60, transform: 'scale(0.5, 0.5)'}} src=\"static/matsurisu_temp.png\" />\n      </Parallax>\n      <Parallax factor={1.3} position={2800} offset={-80}>\n        <img alt=\"matsurisu\" style={{display: 'inline-block', position: 'relative', margin: 0, top: 30, left: 60, transform: 'scale(0.5, 0.5)'}} src=\"static/matsurisu_temp.png\" />\n        <img alt=\"matsurisu\" style={{display: 'inline-block', position: 'relative', margin: 0, top: 10, left: 80, transform: 'scale(0.5, 0.5)'}} src=\"static/matsurisu_temp.png\" />\n        <img alt=\"matsurisu\" style={{display: 'inline-block', position: 'relative', margin: 0, top: 20, left: 40, transform: 'scale(0.5, 0.5)'}} src=\"static/matsurisu_temp.png\" />\n      </Parallax>\n      <Parallax factor={1.0} position={2800} offset={80}>\n        <p>どんどん多くなる</p>\n      </Parallax>\n      \n      <Parallax factor={1.0} position={3500} offset={80}>\n        <p>めっちゃ多くなって</p>\n        <p>ズームアウトして</p>\n        <p>最終的にモザイクになる</p>\n      </Parallax>\n    </Scene>\n  ); \n}\n\nexport default Matsurisu;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Matsurisu from './Matsurisu';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Matsurisu />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}